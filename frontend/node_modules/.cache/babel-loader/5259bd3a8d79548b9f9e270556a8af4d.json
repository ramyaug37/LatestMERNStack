{"ast":null,"code":"exports = module.exports = SemVer;\nvar debug;\n/* istanbul ignore next */\n\nif (typeof process === 'object' && process.env && process.env.NODE_DEBUG && /\\bsemver\\b/i.test(process.env.NODE_DEBUG)) {\n  debug = function () {\n    var args = Array.prototype.slice.call(arguments, 0);\n    args.unshift('SEMVER');\n    console.log.apply(console, args);\n  };\n} else {\n  debug = function () {};\n} // Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\n\n\nexports.SEMVER_SPEC_VERSION = '2.0.0';\nvar MAX_LENGTH = 256;\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n/* istanbul ignore next */\n9007199254740991; // Max safe segment length for coercion.\n\nvar MAX_SAFE_COMPONENT_LENGTH = 16;\nvar MAX_SAFE_BUILD_LENGTH = MAX_LENGTH - 6; // The actual regexps go on exports.re\n\nvar re = exports.re = [];\nvar safeRe = exports.safeRe = [];\nvar src = exports.src = [];\nvar R = 0;\nvar LETTERDASHNUMBER = '[a-zA-Z0-9-]'; // Replace some greedy regex tokens to prevent regex dos issues. These regex are\n// used internally via the safeRe object since all inputs in this library get\n// normalized first to trim and collapse all extra whitespace. The original\n// regexes are exported for userland consumption and lower level usage. A\n// future breaking change could export the safer regex only with a note that\n// all input should have extra whitespace removed.\n\nvar safeRegexReplacements = [['\\\\s', 1], ['\\\\d', MAX_LENGTH], [LETTERDASHNUMBER, MAX_SAFE_BUILD_LENGTH]];\n\nfunction makeSafeRe(value) {\n  for (var i = 0; i < safeRegexReplacements.length; i++) {\n    var token = safeRegexReplacements[i][0];\n    var max = safeRegexReplacements[i][1];\n    value = value.split(token + '*').join(token + '{0,' + max + '}').split(token + '+').join(token + '{1,' + max + '}');\n  }\n\n  return value;\n} // The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\n\nvar NUMERICIDENTIFIER = R++;\nsrc[NUMERICIDENTIFIER] = '0|[1-9]\\\\d*';\nvar NUMERICIDENTIFIERLOOSE = R++;\nsrc[NUMERICIDENTIFIERLOOSE] = '\\\\d+'; // ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\nvar NONNUMERICIDENTIFIER = R++;\nsrc[NONNUMERICIDENTIFIER] = '\\\\d*[a-zA-Z-]' + LETTERDASHNUMBER + '*'; // ## Main Version\n// Three dot-separated numeric identifiers.\n\nvar MAINVERSION = R++;\nsrc[MAINVERSION] = '(' + src[NUMERICIDENTIFIER] + ')\\\\.' + '(' + src[NUMERICIDENTIFIER] + ')\\\\.' + '(' + src[NUMERICIDENTIFIER] + ')';\nvar MAINVERSIONLOOSE = R++;\nsrc[MAINVERSIONLOOSE] = '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' + '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' + '(' + src[NUMERICIDENTIFIERLOOSE] + ')'; // ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\nvar PRERELEASEIDENTIFIER = R++;\nsrc[PRERELEASEIDENTIFIER] = '(?:' + src[NUMERICIDENTIFIER] + '|' + src[NONNUMERICIDENTIFIER] + ')';\nvar PRERELEASEIDENTIFIERLOOSE = R++;\nsrc[PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[NUMERICIDENTIFIERLOOSE] + '|' + src[NONNUMERICIDENTIFIER] + ')'; // ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\nvar PRERELEASE = R++;\nsrc[PRERELEASE] = '(?:-(' + src[PRERELEASEIDENTIFIER] + '(?:\\\\.' + src[PRERELEASEIDENTIFIER] + ')*))';\nvar PRERELEASELOOSE = R++;\nsrc[PRERELEASELOOSE] = '(?:-?(' + src[PRERELEASEIDENTIFIERLOOSE] + '(?:\\\\.' + src[PRERELEASEIDENTIFIERLOOSE] + ')*))'; // ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\nvar BUILDIDENTIFIER = R++;\nsrc[BUILDIDENTIFIER] = LETTERDASHNUMBER + '+'; // ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\nvar BUILD = R++;\nsrc[BUILD] = '(?:\\\\+(' + src[BUILDIDENTIFIER] + '(?:\\\\.' + src[BUILDIDENTIFIER] + ')*))'; // ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\nvar FULL = R++;\nvar FULLPLAIN = 'v?' + src[MAINVERSION] + src[PRERELEASE] + '?' + src[BUILD] + '?';\nsrc[FULL] = '^' + FULLPLAIN + '$'; // like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\n\nvar LOOSEPLAIN = '[v=\\\\s]*' + src[MAINVERSIONLOOSE] + src[PRERELEASELOOSE] + '?' + src[BUILD] + '?';\nvar LOOSE = R++;\nsrc[LOOSE] = '^' + LOOSEPLAIN + '$';\nvar GTLT = R++;\nsrc[GTLT] = '((?:<|>)?=?)'; // Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\n\nvar XRANGEIDENTIFIERLOOSE = R++;\nsrc[XRANGEIDENTIFIERLOOSE] = src[NUMERICIDENTIFIERLOOSE] + '|x|X|\\\\*';\nvar XRANGEIDENTIFIER = R++;\nsrc[XRANGEIDENTIFIER] = src[NUMERICIDENTIFIER] + '|x|X|\\\\*';\nvar XRANGEPLAIN = R++;\nsrc[XRANGEPLAIN] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIER] + ')' + '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' + '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' + '(?:' + src[PRERELEASE] + ')?' + src[BUILD] + '?' + ')?)?';\nvar XRANGEPLAINLOOSE = R++;\nsrc[XRANGEPLAINLOOSE] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIERLOOSE] + ')' + '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' + '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' + '(?:' + src[PRERELEASELOOSE] + ')?' + src[BUILD] + '?' + ')?)?';\nvar XRANGE = R++;\nsrc[XRANGE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAIN] + '$';\nvar XRANGELOOSE = R++;\nsrc[XRANGELOOSE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAINLOOSE] + '$'; // Coercion.\n// Extract anything that could conceivably be a part of a valid semver\n\nvar COERCE = R++;\nsrc[COERCE] = '(?:^|[^\\\\d])' + '(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '})' + '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' + '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' + '(?:$|[^\\\\d])'; // Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\n\nvar LONETILDE = R++;\nsrc[LONETILDE] = '(?:~>?)';\nvar TILDETRIM = R++;\nsrc[TILDETRIM] = '(\\\\s*)' + src[LONETILDE] + '\\\\s+';\nre[TILDETRIM] = new RegExp(src[TILDETRIM], 'g');\nsafeRe[TILDETRIM] = new RegExp(makeSafeRe(src[TILDETRIM]), 'g');\nvar tildeTrimReplace = '$1~';\nvar TILDE = R++;\nsrc[TILDE] = '^' + src[LONETILDE] + src[XRANGEPLAIN] + '$';\nvar TILDELOOSE = R++;\nsrc[TILDELOOSE] = '^' + src[LONETILDE] + src[XRANGEPLAINLOOSE] + '$'; // Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\n\nvar LONECARET = R++;\nsrc[LONECARET] = '(?:\\\\^)';\nvar CARETTRIM = R++;\nsrc[CARETTRIM] = '(\\\\s*)' + src[LONECARET] + '\\\\s+';\nre[CARETTRIM] = new RegExp(src[CARETTRIM], 'g');\nsafeRe[CARETTRIM] = new RegExp(makeSafeRe(src[CARETTRIM]), 'g');\nvar caretTrimReplace = '$1^';\nvar CARET = R++;\nsrc[CARET] = '^' + src[LONECARET] + src[XRANGEPLAIN] + '$';\nvar CARETLOOSE = R++;\nsrc[CARETLOOSE] = '^' + src[LONECARET] + src[XRANGEPLAINLOOSE] + '$'; // A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\n\nvar COMPARATORLOOSE = R++;\nsrc[COMPARATORLOOSE] = '^' + src[GTLT] + '\\\\s*(' + LOOSEPLAIN + ')$|^$';\nvar COMPARATOR = R++;\nsrc[COMPARATOR] = '^' + src[GTLT] + '\\\\s*(' + FULLPLAIN + ')$|^$'; // An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\n\nvar COMPARATORTRIM = R++;\nsrc[COMPARATORTRIM] = '(\\\\s*)' + src[GTLT] + '\\\\s*(' + LOOSEPLAIN + '|' + src[XRANGEPLAIN] + ')'; // this one has to use the /g flag\n\nre[COMPARATORTRIM] = new RegExp(src[COMPARATORTRIM], 'g');\nsafeRe[COMPARATORTRIM] = new RegExp(makeSafeRe(src[COMPARATORTRIM]), 'g');\nvar comparatorTrimReplace = '$1$2$3'; // Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\n\nvar HYPHENRANGE = R++;\nsrc[HYPHENRANGE] = '^\\\\s*(' + src[XRANGEPLAIN] + ')' + '\\\\s+-\\\\s+' + '(' + src[XRANGEPLAIN] + ')' + '\\\\s*$';\nvar HYPHENRANGELOOSE = R++;\nsrc[HYPHENRANGELOOSE] = '^\\\\s*(' + src[XRANGEPLAINLOOSE] + ')' + '\\\\s+-\\\\s+' + '(' + src[XRANGEPLAINLOOSE] + ')' + '\\\\s*$'; // Star ranges basically just allow anything at all.\n\nvar STAR = R++;\nsrc[STAR] = '(<|>)?=?\\\\s*\\\\*'; // Compile to actual regexp objects.\n// All are flag-free, unless they were created above with a flag.\n\nfor (var i = 0; i < R; i++) {\n  debug(i, src[i]);\n\n  if (!re[i]) {\n    re[i] = new RegExp(src[i]); // Replace all greedy whitespace to prevent regex dos issues. These regex are\n    // used internally via the safeRe object since all inputs in this library get\n    // normalized first to trim and collapse all extra whitespace. The original\n    // regexes are exported for userland consumption and lower level usage. A\n    // future breaking change could export the safer regex only with a note that\n    // all input should have extra whitespace removed.\n\n    safeRe[i] = new RegExp(makeSafeRe(src[i]));\n  }\n}\n\nexports.parse = parse;\n\nfunction parse(version, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    };\n  }\n\n  if (version instanceof SemVer) {\n    return version;\n  }\n\n  if (typeof version !== 'string') {\n    return null;\n  }\n\n  if (version.length > MAX_LENGTH) {\n    return null;\n  }\n\n  var r = options.loose ? safeRe[LOOSE] : safeRe[FULL];\n\n  if (!r.test(version)) {\n    return null;\n  }\n\n  try {\n    return new SemVer(version, options);\n  } catch (er) {\n    return null;\n  }\n}\n\nexports.valid = valid;\n\nfunction valid(version, options) {\n  var v = parse(version, options);\n  return v ? v.version : null;\n}\n\nexports.clean = clean;\n\nfunction clean(version, options) {\n  var s = parse(version.trim().replace(/^[=v]+/, ''), options);\n  return s ? s.version : null;\n}\n\nexports.SemVer = SemVer;\n\nfunction SemVer(version, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    };\n  }\n\n  if (version instanceof SemVer) {\n    if (version.loose === options.loose) {\n      return version;\n    } else {\n      version = version.version;\n    }\n  } else if (typeof version !== 'string') {\n    throw new TypeError('Invalid Version: ' + version);\n  }\n\n  if (version.length > MAX_LENGTH) {\n    throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters');\n  }\n\n  if (!(this instanceof SemVer)) {\n    return new SemVer(version, options);\n  }\n\n  debug('SemVer', version, options);\n  this.options = options;\n  this.loose = !!options.loose;\n  var m = version.trim().match(options.loose ? safeRe[LOOSE] : safeRe[FULL]);\n\n  if (!m) {\n    throw new TypeError('Invalid Version: ' + version);\n  }\n\n  this.raw = version; // these are actually numbers\n\n  this.major = +m[1];\n  this.minor = +m[2];\n  this.patch = +m[3];\n\n  if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n    throw new TypeError('Invalid major version');\n  }\n\n  if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n    throw new TypeError('Invalid minor version');\n  }\n\n  if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n    throw new TypeError('Invalid patch version');\n  } // numberify any prerelease numeric ids\n\n\n  if (!m[4]) {\n    this.prerelease = [];\n  } else {\n    this.prerelease = m[4].split('.').map(function (id) {\n      if (/^[0-9]+$/.test(id)) {\n        var num = +id;\n\n        if (num >= 0 && num < MAX_SAFE_INTEGER) {\n          return num;\n        }\n      }\n\n      return id;\n    });\n  }\n\n  this.build = m[5] ? m[5].split('.') : [];\n  this.format();\n}\n\nSemVer.prototype.format = function () {\n  this.version = this.major + '.' + this.minor + '.' + this.patch;\n\n  if (this.prerelease.length) {\n    this.version += '-' + this.prerelease.join('.');\n  }\n\n  return this.version;\n};\n\nSemVer.prototype.toString = function () {\n  return this.version;\n};\n\nSemVer.prototype.compare = function (other) {\n  debug('SemVer.compare', this.version, this.options, other);\n\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options);\n  }\n\n  return this.compareMain(other) || this.comparePre(other);\n};\n\nSemVer.prototype.compareMain = function (other) {\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options);\n  }\n\n  return compareIdentifiers(this.major, other.major) || compareIdentifiers(this.minor, other.minor) || compareIdentifiers(this.patch, other.patch);\n};\n\nSemVer.prototype.comparePre = function (other) {\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options);\n  } // NOT having a prerelease is > having one\n\n\n  if (this.prerelease.length && !other.prerelease.length) {\n    return -1;\n  } else if (!this.prerelease.length && other.prerelease.length) {\n    return 1;\n  } else if (!this.prerelease.length && !other.prerelease.length) {\n    return 0;\n  }\n\n  var i = 0;\n\n  do {\n    var a = this.prerelease[i];\n    var b = other.prerelease[i];\n    debug('prerelease compare', i, a, b);\n\n    if (a === undefined && b === undefined) {\n      return 0;\n    } else if (b === undefined) {\n      return 1;\n    } else if (a === undefined) {\n      return -1;\n    } else if (a === b) {\n      continue;\n    } else {\n      return compareIdentifiers(a, b);\n    }\n  } while (++i);\n}; // preminor will bump the version up to the next minor release, and immediately\n// down to pre-release. premajor and prepatch work the same way.\n\n\nSemVer.prototype.inc = function (release, identifier) {\n  switch (release) {\n    case 'premajor':\n      this.prerelease.length = 0;\n      this.patch = 0;\n      this.minor = 0;\n      this.major++;\n      this.inc('pre', identifier);\n      break;\n\n    case 'preminor':\n      this.prerelease.length = 0;\n      this.patch = 0;\n      this.minor++;\n      this.inc('pre', identifier);\n      break;\n\n    case 'prepatch':\n      // If this is already a prerelease, it will bump to the next version\n      // drop any prereleases that might already exist, since they are not\n      // relevant at this point.\n      this.prerelease.length = 0;\n      this.inc('patch', identifier);\n      this.inc('pre', identifier);\n      break;\n    // If the input is a non-prerelease version, this acts the same as\n    // prepatch.\n\n    case 'prerelease':\n      if (this.prerelease.length === 0) {\n        this.inc('patch', identifier);\n      }\n\n      this.inc('pre', identifier);\n      break;\n\n    case 'major':\n      // If this is a pre-major version, bump up to the same major version.\n      // Otherwise increment major.\n      // 1.0.0-5 bumps to 1.0.0\n      // 1.1.0 bumps to 2.0.0\n      if (this.minor !== 0 || this.patch !== 0 || this.prerelease.length === 0) {\n        this.major++;\n      }\n\n      this.minor = 0;\n      this.patch = 0;\n      this.prerelease = [];\n      break;\n\n    case 'minor':\n      // If this is a pre-minor version, bump up to the same minor version.\n      // Otherwise increment minor.\n      // 1.2.0-5 bumps to 1.2.0\n      // 1.2.1 bumps to 1.3.0\n      if (this.patch !== 0 || this.prerelease.length === 0) {\n        this.minor++;\n      }\n\n      this.patch = 0;\n      this.prerelease = [];\n      break;\n\n    case 'patch':\n      // If this is not a pre-release version, it will increment the patch.\n      // If it is a pre-release it will bump up to the same patch version.\n      // 1.2.0-5 patches to 1.2.0\n      // 1.2.0 patches to 1.2.1\n      if (this.prerelease.length === 0) {\n        this.patch++;\n      }\n\n      this.prerelease = [];\n      break;\n    // This probably shouldn't be used publicly.\n    // 1.0.0 \"pre\" would become 1.0.0-0 which is the wrong direction.\n\n    case 'pre':\n      if (this.prerelease.length === 0) {\n        this.prerelease = [0];\n      } else {\n        var i = this.prerelease.length;\n\n        while (--i >= 0) {\n          if (typeof this.prerelease[i] === 'number') {\n            this.prerelease[i]++;\n            i = -2;\n          }\n        }\n\n        if (i === -1) {\n          // didn't increment anything\n          this.prerelease.push(0);\n        }\n      }\n\n      if (identifier) {\n        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n        if (this.prerelease[0] === identifier) {\n          if (isNaN(this.prerelease[1])) {\n            this.prerelease = [identifier, 0];\n          }\n        } else {\n          this.prerelease = [identifier, 0];\n        }\n      }\n\n      break;\n\n    default:\n      throw new Error('invalid increment argument: ' + release);\n  }\n\n  this.format();\n  this.raw = this.version;\n  return this;\n};\n\nexports.inc = inc;\n\nfunction inc(version, release, loose, identifier) {\n  if (typeof loose === 'string') {\n    identifier = loose;\n    loose = undefined;\n  }\n\n  try {\n    return new SemVer(version, loose).inc(release, identifier).version;\n  } catch (er) {\n    return null;\n  }\n}\n\nexports.diff = diff;\n\nfunction diff(version1, version2) {\n  if (eq(version1, version2)) {\n    return null;\n  } else {\n    var v1 = parse(version1);\n    var v2 = parse(version2);\n    var prefix = '';\n\n    if (v1.prerelease.length || v2.prerelease.length) {\n      prefix = 'pre';\n      var defaultResult = 'prerelease';\n    }\n\n    for (var key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return prefix + key;\n        }\n      }\n    }\n\n    return defaultResult; // may be undefined\n  }\n}\n\nexports.compareIdentifiers = compareIdentifiers;\nvar numeric = /^[0-9]+$/;\n\nfunction compareIdentifiers(a, b) {\n  var anum = numeric.test(a);\n  var bnum = numeric.test(b);\n\n  if (anum && bnum) {\n    a = +a;\n    b = +b;\n  }\n\n  return a === b ? 0 : anum && !bnum ? -1 : bnum && !anum ? 1 : a < b ? -1 : 1;\n}\n\nexports.rcompareIdentifiers = rcompareIdentifiers;\n\nfunction rcompareIdentifiers(a, b) {\n  return compareIdentifiers(b, a);\n}\n\nexports.major = major;\n\nfunction major(a, loose) {\n  return new SemVer(a, loose).major;\n}\n\nexports.minor = minor;\n\nfunction minor(a, loose) {\n  return new SemVer(a, loose).minor;\n}\n\nexports.patch = patch;\n\nfunction patch(a, loose) {\n  return new SemVer(a, loose).patch;\n}\n\nexports.compare = compare;\n\nfunction compare(a, b, loose) {\n  return new SemVer(a, loose).compare(new SemVer(b, loose));\n}\n\nexports.compareLoose = compareLoose;\n\nfunction compareLoose(a, b) {\n  return compare(a, b, true);\n}\n\nexports.rcompare = rcompare;\n\nfunction rcompare(a, b, loose) {\n  return compare(b, a, loose);\n}\n\nexports.sort = sort;\n\nfunction sort(list, loose) {\n  return list.sort(function (a, b) {\n    return exports.compare(a, b, loose);\n  });\n}\n\nexports.rsort = rsort;\n\nfunction rsort(list, loose) {\n  return list.sort(function (a, b) {\n    return exports.rcompare(a, b, loose);\n  });\n}\n\nexports.gt = gt;\n\nfunction gt(a, b, loose) {\n  return compare(a, b, loose) > 0;\n}\n\nexports.lt = lt;\n\nfunction lt(a, b, loose) {\n  return compare(a, b, loose) < 0;\n}\n\nexports.eq = eq;\n\nfunction eq(a, b, loose) {\n  return compare(a, b, loose) === 0;\n}\n\nexports.neq = neq;\n\nfunction neq(a, b, loose) {\n  return compare(a, b, loose) !== 0;\n}\n\nexports.gte = gte;\n\nfunction gte(a, b, loose) {\n  return compare(a, b, loose) >= 0;\n}\n\nexports.lte = lte;\n\nfunction lte(a, b, loose) {\n  return compare(a, b, loose) <= 0;\n}\n\nexports.cmp = cmp;\n\nfunction cmp(a, op, b, loose) {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') a = a.version;\n      if (typeof b === 'object') b = b.version;\n      return a === b;\n\n    case '!==':\n      if (typeof a === 'object') a = a.version;\n      if (typeof b === 'object') b = b.version;\n      return a !== b;\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose);\n\n    case '!=':\n      return neq(a, b, loose);\n\n    case '>':\n      return gt(a, b, loose);\n\n    case '>=':\n      return gte(a, b, loose);\n\n    case '<':\n      return lt(a, b, loose);\n\n    case '<=':\n      return lte(a, b, loose);\n\n    default:\n      throw new TypeError('Invalid operator: ' + op);\n  }\n}\n\nexports.Comparator = Comparator;\n\nfunction Comparator(comp, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    };\n  }\n\n  if (comp instanceof Comparator) {\n    if (comp.loose === !!options.loose) {\n      return comp;\n    } else {\n      comp = comp.value;\n    }\n  }\n\n  if (!(this instanceof Comparator)) {\n    return new Comparator(comp, options);\n  }\n\n  comp = comp.trim().split(/\\s+/).join(' ');\n  debug('comparator', comp, options);\n  this.options = options;\n  this.loose = !!options.loose;\n  this.parse(comp);\n\n  if (this.semver === ANY) {\n    this.value = '';\n  } else {\n    this.value = this.operator + this.semver.version;\n  }\n\n  debug('comp', this);\n}\n\nvar ANY = {};\n\nComparator.prototype.parse = function (comp) {\n  var r = this.options.loose ? safeRe[COMPARATORLOOSE] : safeRe[COMPARATOR];\n  var m = comp.match(r);\n\n  if (!m) {\n    throw new TypeError('Invalid comparator: ' + comp);\n  }\n\n  this.operator = m[1];\n\n  if (this.operator === '=') {\n    this.operator = '';\n  } // if it literally is just '>' or '' then allow anything.\n\n\n  if (!m[2]) {\n    this.semver = ANY;\n  } else {\n    this.semver = new SemVer(m[2], this.options.loose);\n  }\n};\n\nComparator.prototype.toString = function () {\n  return this.value;\n};\n\nComparator.prototype.test = function (version) {\n  debug('Comparator.test', version, this.options.loose);\n\n  if (this.semver === ANY) {\n    return true;\n  }\n\n  if (typeof version === 'string') {\n    version = new SemVer(version, this.options);\n  }\n\n  return cmp(version, this.operator, this.semver, this.options);\n};\n\nComparator.prototype.intersects = function (comp, options) {\n  if (!(comp instanceof Comparator)) {\n    throw new TypeError('a Comparator is required');\n  }\n\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    };\n  }\n\n  var rangeTmp;\n\n  if (this.operator === '') {\n    rangeTmp = new Range(comp.value, options);\n    return satisfies(this.value, rangeTmp, options);\n  } else if (comp.operator === '') {\n    rangeTmp = new Range(this.value, options);\n    return satisfies(comp.semver, rangeTmp, options);\n  }\n\n  var sameDirectionIncreasing = (this.operator === '>=' || this.operator === '>') && (comp.operator === '>=' || comp.operator === '>');\n  var sameDirectionDecreasing = (this.operator === '<=' || this.operator === '<') && (comp.operator === '<=' || comp.operator === '<');\n  var sameSemVer = this.semver.version === comp.semver.version;\n  var differentDirectionsInclusive = (this.operator === '>=' || this.operator === '<=') && (comp.operator === '>=' || comp.operator === '<=');\n  var oppositeDirectionsLessThan = cmp(this.semver, '<', comp.semver, options) && (this.operator === '>=' || this.operator === '>') && (comp.operator === '<=' || comp.operator === '<');\n  var oppositeDirectionsGreaterThan = cmp(this.semver, '>', comp.semver, options) && (this.operator === '<=' || this.operator === '<') && (comp.operator === '>=' || comp.operator === '>');\n  return sameDirectionIncreasing || sameDirectionDecreasing || sameSemVer && differentDirectionsInclusive || oppositeDirectionsLessThan || oppositeDirectionsGreaterThan;\n};\n\nexports.Range = Range;\n\nfunction Range(range, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    };\n  }\n\n  if (range instanceof Range) {\n    if (range.loose === !!options.loose && range.includePrerelease === !!options.includePrerelease) {\n      return range;\n    } else {\n      return new Range(range.raw, options);\n    }\n  }\n\n  if (range instanceof Comparator) {\n    return new Range(range.value, options);\n  }\n\n  if (!(this instanceof Range)) {\n    return new Range(range, options);\n  }\n\n  this.options = options;\n  this.loose = !!options.loose;\n  this.includePrerelease = !!options.includePrerelease; // First reduce all whitespace as much as possible so we do not have to rely\n  // on potentially slow regexes like \\s*. This is then stored and used for\n  // future error messages as well.\n\n  this.raw = range.trim().split(/\\s+/).join(' '); // First, split based on boolean or ||\n\n  this.set = this.raw.split('||').map(function (range) {\n    return this.parseRange(range.trim());\n  }, this).filter(function (c) {\n    // throw out any that are not relevant for whatever reason\n    return c.length;\n  });\n\n  if (!this.set.length) {\n    throw new TypeError('Invalid SemVer Range: ' + this.raw);\n  }\n\n  this.format();\n}\n\nRange.prototype.format = function () {\n  this.range = this.set.map(function (comps) {\n    return comps.join(' ').trim();\n  }).join('||').trim();\n  return this.range;\n};\n\nRange.prototype.toString = function () {\n  return this.range;\n};\n\nRange.prototype.parseRange = function (range) {\n  var loose = this.options.loose; // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n\n  var hr = loose ? safeRe[HYPHENRANGELOOSE] : safeRe[HYPHENRANGE];\n  range = range.replace(hr, hyphenReplace);\n  debug('hyphen replace', range); // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n\n  range = range.replace(safeRe[COMPARATORTRIM], comparatorTrimReplace);\n  debug('comparator trim', range, safeRe[COMPARATORTRIM]); // `~ 1.2.3` => `~1.2.3`\n\n  range = range.replace(safeRe[TILDETRIM], tildeTrimReplace); // `^ 1.2.3` => `^1.2.3`\n\n  range = range.replace(safeRe[CARETTRIM], caretTrimReplace); // At this point, the range is completely trimmed and\n  // ready to be split into comparators.\n\n  var compRe = loose ? safeRe[COMPARATORLOOSE] : safeRe[COMPARATOR];\n  var set = range.split(' ').map(function (comp) {\n    return parseComparator(comp, this.options);\n  }, this).join(' ').split(/\\s+/);\n\n  if (this.options.loose) {\n    // in loose mode, throw out any that are not valid comparators\n    set = set.filter(function (comp) {\n      return !!comp.match(compRe);\n    });\n  }\n\n  set = set.map(function (comp) {\n    return new Comparator(comp, this.options);\n  }, this);\n  return set;\n};\n\nRange.prototype.intersects = function (range, options) {\n  if (!(range instanceof Range)) {\n    throw new TypeError('a Range is required');\n  }\n\n  return this.set.some(function (thisComparators) {\n    return thisComparators.every(function (thisComparator) {\n      return range.set.some(function (rangeComparators) {\n        return rangeComparators.every(function (rangeComparator) {\n          return thisComparator.intersects(rangeComparator, options);\n        });\n      });\n    });\n  });\n}; // Mostly just for testing and legacy API reasons\n\n\nexports.toComparators = toComparators;\n\nfunction toComparators(range, options) {\n  return new Range(range, options).set.map(function (comp) {\n    return comp.map(function (c) {\n      return c.value;\n    }).join(' ').trim().split(' ');\n  });\n} // comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\n\n\nfunction parseComparator(comp, options) {\n  debug('comp', comp, options);\n  comp = replaceCarets(comp, options);\n  debug('caret', comp);\n  comp = replaceTildes(comp, options);\n  debug('tildes', comp);\n  comp = replaceXRanges(comp, options);\n  debug('xrange', comp);\n  comp = replaceStars(comp, options);\n  debug('stars', comp);\n  return comp;\n}\n\nfunction isX(id) {\n  return !id || id.toLowerCase() === 'x' || id === '*';\n} // ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0\n\n\nfunction replaceTildes(comp, options) {\n  return comp.trim().split(/\\s+/).map(function (comp) {\n    return replaceTilde(comp, options);\n  }).join(' ');\n}\n\nfunction replaceTilde(comp, options) {\n  var r = options.loose ? safeRe[TILDELOOSE] : safeRe[TILDE];\n  return comp.replace(r, function (_, M, m, p, pr) {\n    debug('tilde', comp, _, M, m, p, pr);\n    var ret;\n\n    if (isX(M)) {\n      ret = '';\n    } else if (isX(m)) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n    } else if (pr) {\n      debug('replaceTilde pr', pr);\n      ret = '>=' + M + '.' + m + '.' + p + '-' + pr + ' <' + M + '.' + (+m + 1) + '.0';\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0\n      ret = '>=' + M + '.' + m + '.' + p + ' <' + M + '.' + (+m + 1) + '.0';\n    }\n\n    debug('tilde return', ret);\n    return ret;\n  });\n} // ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0\n// ^1.2.3 --> >=1.2.3 <2.0.0\n// ^1.2.0 --> >=1.2.0 <2.0.0\n\n\nfunction replaceCarets(comp, options) {\n  return comp.trim().split(/\\s+/).map(function (comp) {\n    return replaceCaret(comp, options);\n  }).join(' ');\n}\n\nfunction replaceCaret(comp, options) {\n  debug('caret', comp, options);\n  var r = options.loose ? safeRe[CARETLOOSE] : safeRe[CARET];\n  return comp.replace(r, function (_, M, m, p, pr) {\n    debug('caret', comp, _, M, m, p, pr);\n    var ret;\n\n    if (isX(M)) {\n      ret = '';\n    } else if (isX(m)) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n      } else {\n        ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0';\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr);\n\n      if (M === '0') {\n        if (m === '0') {\n          ret = '>=' + M + '.' + m + '.' + p + '-' + pr + ' <' + M + '.' + m + '.' + (+p + 1);\n        } else {\n          ret = '>=' + M + '.' + m + '.' + p + '-' + pr + ' <' + M + '.' + (+m + 1) + '.0';\n        }\n      } else {\n        ret = '>=' + M + '.' + m + '.' + p + '-' + pr + ' <' + (+M + 1) + '.0.0';\n      }\n    } else {\n      debug('no pr');\n\n      if (M === '0') {\n        if (m === '0') {\n          ret = '>=' + M + '.' + m + '.' + p + ' <' + M + '.' + m + '.' + (+p + 1);\n        } else {\n          ret = '>=' + M + '.' + m + '.' + p + ' <' + M + '.' + (+m + 1) + '.0';\n        }\n      } else {\n        ret = '>=' + M + '.' + m + '.' + p + ' <' + (+M + 1) + '.0.0';\n      }\n    }\n\n    debug('caret return', ret);\n    return ret;\n  });\n}\n\nfunction replaceXRanges(comp, options) {\n  debug('replaceXRanges', comp, options);\n  return comp.split(/\\s+/).map(function (comp) {\n    return replaceXRange(comp, options);\n  }).join(' ');\n}\n\nfunction replaceXRange(comp, options) {\n  comp = comp.trim();\n  var r = options.loose ? safeRe[XRANGELOOSE] : safeRe[XRANGE];\n  return comp.replace(r, function (ret, gtlt, M, m, p, pr) {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr);\n    var xM = isX(M);\n    var xm = xM || isX(m);\n    var xp = xm || isX(p);\n    var anyX = xp;\n\n    if (gtlt === '=' && anyX) {\n      gtlt = '';\n    }\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0';\n      } else {\n        // nothing is forbidden\n        ret = '*';\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0;\n      }\n\n      p = 0;\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        // >1.2.3 => >= 1.2.4\n        gtlt = '>=';\n\n        if (xm) {\n          M = +M + 1;\n          m = 0;\n          p = 0;\n        } else {\n          m = +m + 1;\n          p = 0;\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<';\n\n        if (xm) {\n          M = +M + 1;\n        } else {\n          m = +m + 1;\n        }\n      }\n\n      ret = gtlt + M + '.' + m + '.' + p;\n    } else if (xm) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    } else if (xp) {\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n    }\n\n    debug('xRange return', ret);\n    return ret;\n  });\n} // Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\n\n\nfunction replaceStars(comp, options) {\n  debug('replaceStars', comp, options); // Looseness is ignored here.  star is always as loose as it gets!\n\n  return comp.trim().replace(safeRe[STAR], '');\n} // This function is passed to string.replace(safeRe[HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0\n\n\nfunction hyphenReplace($0, from, fM, fm, fp, fpr, fb, to, tM, tm, tp, tpr, tb) {\n  if (isX(fM)) {\n    from = '';\n  } else if (isX(fm)) {\n    from = '>=' + fM + '.0.0';\n  } else if (isX(fp)) {\n    from = '>=' + fM + '.' + fm + '.0';\n  } else {\n    from = '>=' + from;\n  }\n\n  if (isX(tM)) {\n    to = '';\n  } else if (isX(tm)) {\n    to = '<' + (+tM + 1) + '.0.0';\n  } else if (isX(tp)) {\n    to = '<' + tM + '.' + (+tm + 1) + '.0';\n  } else if (tpr) {\n    to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr;\n  } else {\n    to = '<=' + to;\n  }\n\n  return (from + ' ' + to).trim();\n} // if ANY of the sets match ALL of its comparators, then pass\n\n\nRange.prototype.test = function (version) {\n  if (!version) {\n    return false;\n  }\n\n  if (typeof version === 'string') {\n    version = new SemVer(version, this.options);\n  }\n\n  for (var i = 0; i < this.set.length; i++) {\n    if (testSet(this.set[i], version, this.options)) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nfunction testSet(set, version, options) {\n  for (var i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false;\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (i = 0; i < set.length; i++) {\n      debug(set[i].semver);\n\n      if (set[i].semver === ANY) {\n        continue;\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        var allowed = set[i].semver;\n\n        if (allowed.major === version.major && allowed.minor === version.minor && allowed.patch === version.patch) {\n          return true;\n        }\n      }\n    } // Version has a -pre, but it's not one of the ones we like.\n\n\n    return false;\n  }\n\n  return true;\n}\n\nexports.satisfies = satisfies;\n\nfunction satisfies(version, range, options) {\n  try {\n    range = new Range(range, options);\n  } catch (er) {\n    return false;\n  }\n\n  return range.test(version);\n}\n\nexports.maxSatisfying = maxSatisfying;\n\nfunction maxSatisfying(versions, range, options) {\n  var max = null;\n  var maxSV = null;\n\n  try {\n    var rangeObj = new Range(range, options);\n  } catch (er) {\n    return null;\n  }\n\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v;\n        maxSV = new SemVer(max, options);\n      }\n    }\n  });\n  return max;\n}\n\nexports.minSatisfying = minSatisfying;\n\nfunction minSatisfying(versions, range, options) {\n  var min = null;\n  var minSV = null;\n\n  try {\n    var rangeObj = new Range(range, options);\n  } catch (er) {\n    return null;\n  }\n\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v;\n        minSV = new SemVer(min, options);\n      }\n    }\n  });\n  return min;\n}\n\nexports.minVersion = minVersion;\n\nfunction minVersion(range, loose) {\n  range = new Range(range, loose);\n  var minver = new SemVer('0.0.0');\n\n  if (range.test(minver)) {\n    return minver;\n  }\n\n  minver = new SemVer('0.0.0-0');\n\n  if (range.test(minver)) {\n    return minver;\n  }\n\n  minver = null;\n\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i];\n    comparators.forEach(function (comparator) {\n      // Clone to avoid manipulating the comparator's semver object.\n      var compver = new SemVer(comparator.semver.version);\n\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++;\n          } else {\n            compver.prerelease.push(0);\n          }\n\n          compver.raw = compver.format();\n\n        /* fallthrough */\n\n        case '':\n        case '>=':\n          if (!minver || gt(minver, compver)) {\n            minver = compver;\n          }\n\n          break;\n\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break;\n\n        /* istanbul ignore next */\n\n        default:\n          throw new Error('Unexpected operation: ' + comparator.operator);\n      }\n    });\n  }\n\n  if (minver && range.test(minver)) {\n    return minver;\n  }\n\n  return null;\n}\n\nexports.validRange = validRange;\n\nfunction validRange(range, options) {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*';\n  } catch (er) {\n    return null;\n  }\n} // Determine if version is less than all the versions possible in the range\n\n\nexports.ltr = ltr;\n\nfunction ltr(version, range, options) {\n  return outside(version, range, '<', options);\n} // Determine if version is greater than all the versions possible in the range.\n\n\nexports.gtr = gtr;\n\nfunction gtr(version, range, options) {\n  return outside(version, range, '>', options);\n}\n\nexports.outside = outside;\n\nfunction outside(version, range, hilo, options) {\n  version = new SemVer(version, options);\n  range = new Range(range, options);\n  var gtfn, ltefn, ltfn, comp, ecomp;\n\n  switch (hilo) {\n    case '>':\n      gtfn = gt;\n      ltefn = lte;\n      ltfn = lt;\n      comp = '>';\n      ecomp = '>=';\n      break;\n\n    case '<':\n      gtfn = lt;\n      ltefn = gte;\n      ltfn = gt;\n      comp = '<';\n      ecomp = '<=';\n      break;\n\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"');\n  } // If it satisifes the range it is not outside\n\n\n  if (satisfies(version, range, options)) {\n    return false;\n  } // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i];\n    var high = null;\n    var low = null;\n    comparators.forEach(function (comparator) {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0');\n      }\n\n      high = high || comparator;\n      low = low || comparator;\n\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator;\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator;\n      }\n    }); // If the edge version comparator has a operator then our version\n    // isn't outside it\n\n    if (high.operator === comp || high.operator === ecomp) {\n      return false;\n    } // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n\n\n    if ((!low.operator || low.operator === comp) && ltefn(version, low.semver)) {\n      return false;\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexports.prerelease = prerelease;\n\nfunction prerelease(version, options) {\n  var parsed = parse(version, options);\n  return parsed && parsed.prerelease.length ? parsed.prerelease : null;\n}\n\nexports.intersects = intersects;\n\nfunction intersects(r1, r2, options) {\n  r1 = new Range(r1, options);\n  r2 = new Range(r2, options);\n  return r1.intersects(r2);\n}\n\nexports.coerce = coerce;\n\nfunction coerce(version) {\n  if (version instanceof SemVer) {\n    return version;\n  }\n\n  if (typeof version !== 'string') {\n    return null;\n  }\n\n  var match = version.match(safeRe[COERCE]);\n\n  if (match == null) {\n    return null;\n  }\n\n  return parse(match[1] + '.' + (match[2] || '0') + '.' + (match[3] || '0'));\n}","map":{"version":3,"names":["exports","module","SemVer","debug","process","env","NODE_DEBUG","test","args","Array","prototype","slice","call","arguments","unshift","console","log","apply","SEMVER_SPEC_VERSION","MAX_LENGTH","MAX_SAFE_INTEGER","Number","MAX_SAFE_COMPONENT_LENGTH","MAX_SAFE_BUILD_LENGTH","re","safeRe","src","R","LETTERDASHNUMBER","safeRegexReplacements","makeSafeRe","value","i","length","token","max","split","join","NUMERICIDENTIFIER","NUMERICIDENTIFIERLOOSE","NONNUMERICIDENTIFIER","MAINVERSION","MAINVERSIONLOOSE","PRERELEASEIDENTIFIER","PRERELEASEIDENTIFIERLOOSE","PRERELEASE","PRERELEASELOOSE","BUILDIDENTIFIER","BUILD","FULL","FULLPLAIN","LOOSEPLAIN","LOOSE","GTLT","XRANGEIDENTIFIERLOOSE","XRANGEIDENTIFIER","XRANGEPLAIN","XRANGEPLAINLOOSE","XRANGE","XRANGELOOSE","COERCE","LONETILDE","TILDETRIM","RegExp","tildeTrimReplace","TILDE","TILDELOOSE","LONECARET","CARETTRIM","caretTrimReplace","CARET","CARETLOOSE","COMPARATORLOOSE","COMPARATOR","COMPARATORTRIM","comparatorTrimReplace","HYPHENRANGE","HYPHENRANGELOOSE","STAR","parse","version","options","loose","includePrerelease","r","er","valid","v","clean","s","trim","replace","TypeError","m","match","raw","major","minor","patch","prerelease","map","id","num","build","format","toString","compare","other","compareMain","comparePre","compareIdentifiers","a","b","undefined","inc","release","identifier","push","isNaN","Error","diff","version1","version2","eq","v1","v2","prefix","defaultResult","key","numeric","anum","bnum","rcompareIdentifiers","compareLoose","rcompare","sort","list","rsort","gt","lt","neq","gte","lte","cmp","op","Comparator","comp","semver","ANY","operator","intersects","rangeTmp","Range","satisfies","sameDirectionIncreasing","sameDirectionDecreasing","sameSemVer","differentDirectionsInclusive","oppositeDirectionsLessThan","oppositeDirectionsGreaterThan","range","set","parseRange","filter","c","comps","hr","hyphenReplace","compRe","parseComparator","some","thisComparators","every","thisComparator","rangeComparators","rangeComparator","toComparators","replaceCarets","replaceTildes","replaceXRanges","replaceStars","isX","toLowerCase","replaceTilde","_","M","p","pr","ret","replaceCaret","replaceXRange","gtlt","xM","xm","xp","anyX","$0","from","fM","fm","fp","fpr","fb","to","tM","tm","tp","tpr","tb","testSet","allowed","maxSatisfying","versions","maxSV","rangeObj","forEach","minSatisfying","min","minSV","minVersion","minver","comparators","comparator","compver","validRange","ltr","outside","gtr","hilo","gtfn","ltefn","ltfn","ecomp","high","low","parsed","r1","r2","coerce"],"sources":["/Users/ramyareddymothe/Desktop/New2/ecomern-frontend-main/node_modules/jsonwebtoken/node_modules/semver/semver.js"],"sourcesContent":["exports = module.exports = SemVer\n\nvar debug\n/* istanbul ignore next */\nif (typeof process === 'object' &&\n    process.env &&\n    process.env.NODE_DEBUG &&\n    /\\bsemver\\b/i.test(process.env.NODE_DEBUG)) {\n  debug = function () {\n    var args = Array.prototype.slice.call(arguments, 0)\n    args.unshift('SEMVER')\n    console.log.apply(console, args)\n  }\n} else {\n  debug = function () {}\n}\n\n// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nexports.SEMVER_SPEC_VERSION = '2.0.0'\n\nvar MAX_LENGTH = 256\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n  /* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nvar MAX_SAFE_COMPONENT_LENGTH = 16\n\nvar MAX_SAFE_BUILD_LENGTH = MAX_LENGTH - 6\n\n// The actual regexps go on exports.re\nvar re = exports.re = []\nvar safeRe = exports.safeRe = []\nvar src = exports.src = []\nvar R = 0\n\nvar LETTERDASHNUMBER = '[a-zA-Z0-9-]'\n\n// Replace some greedy regex tokens to prevent regex dos issues. These regex are\n// used internally via the safeRe object since all inputs in this library get\n// normalized first to trim and collapse all extra whitespace. The original\n// regexes are exported for userland consumption and lower level usage. A\n// future breaking change could export the safer regex only with a note that\n// all input should have extra whitespace removed.\nvar safeRegexReplacements = [\n  ['\\\\s', 1],\n  ['\\\\d', MAX_LENGTH],\n  [LETTERDASHNUMBER, MAX_SAFE_BUILD_LENGTH],\n]\n\nfunction makeSafeRe (value) {\n  for (var i = 0; i < safeRegexReplacements.length; i++) {\n    var token = safeRegexReplacements[i][0]\n    var max = safeRegexReplacements[i][1]\n    value = value\n      .split(token + '*').join(token + '{0,' + max + '}')\n      .split(token + '+').join(token + '{1,' + max + '}')\n  }\n  return value\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\nvar NUMERICIDENTIFIER = R++\nsrc[NUMERICIDENTIFIER] = '0|[1-9]\\\\d*'\nvar NUMERICIDENTIFIERLOOSE = R++\nsrc[NUMERICIDENTIFIERLOOSE] = '\\\\d+'\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\nvar NONNUMERICIDENTIFIER = R++\nsrc[NONNUMERICIDENTIFIER] = '\\\\d*[a-zA-Z-]' + LETTERDASHNUMBER + '*'\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\nvar MAINVERSION = R++\nsrc[MAINVERSION] = '(' + src[NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[NUMERICIDENTIFIER] + ')'\n\nvar MAINVERSIONLOOSE = R++\nsrc[MAINVERSIONLOOSE] = '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')'\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\nvar PRERELEASEIDENTIFIER = R++\nsrc[PRERELEASEIDENTIFIER] = '(?:' + src[NUMERICIDENTIFIER] +\n                            '|' + src[NONNUMERICIDENTIFIER] + ')'\n\nvar PRERELEASEIDENTIFIERLOOSE = R++\nsrc[PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[NUMERICIDENTIFIERLOOSE] +\n                                 '|' + src[NONNUMERICIDENTIFIER] + ')'\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\nvar PRERELEASE = R++\nsrc[PRERELEASE] = '(?:-(' + src[PRERELEASEIDENTIFIER] +\n                  '(?:\\\\.' + src[PRERELEASEIDENTIFIER] + ')*))'\n\nvar PRERELEASELOOSE = R++\nsrc[PRERELEASELOOSE] = '(?:-?(' + src[PRERELEASEIDENTIFIERLOOSE] +\n                       '(?:\\\\.' + src[PRERELEASEIDENTIFIERLOOSE] + ')*))'\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\nvar BUILDIDENTIFIER = R++\nsrc[BUILDIDENTIFIER] = LETTERDASHNUMBER + '+'\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\nvar BUILD = R++\nsrc[BUILD] = '(?:\\\\+(' + src[BUILDIDENTIFIER] +\n             '(?:\\\\.' + src[BUILDIDENTIFIER] + ')*))'\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\nvar FULL = R++\nvar FULLPLAIN = 'v?' + src[MAINVERSION] +\n                src[PRERELEASE] + '?' +\n                src[BUILD] + '?'\n\nsrc[FULL] = '^' + FULLPLAIN + '$'\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\nvar LOOSEPLAIN = '[v=\\\\s]*' + src[MAINVERSIONLOOSE] +\n                 src[PRERELEASELOOSE] + '?' +\n                 src[BUILD] + '?'\n\nvar LOOSE = R++\nsrc[LOOSE] = '^' + LOOSEPLAIN + '$'\n\nvar GTLT = R++\nsrc[GTLT] = '((?:<|>)?=?)'\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\nvar XRANGEIDENTIFIERLOOSE = R++\nsrc[XRANGEIDENTIFIERLOOSE] = src[NUMERICIDENTIFIERLOOSE] + '|x|X|\\\\*'\nvar XRANGEIDENTIFIER = R++\nsrc[XRANGEIDENTIFIER] = src[NUMERICIDENTIFIER] + '|x|X|\\\\*'\n\nvar XRANGEPLAIN = R++\nsrc[XRANGEPLAIN] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:' + src[PRERELEASE] + ')?' +\n                   src[BUILD] + '?' +\n                   ')?)?'\n\nvar XRANGEPLAINLOOSE = R++\nsrc[XRANGEPLAINLOOSE] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:' + src[PRERELEASELOOSE] + ')?' +\n                        src[BUILD] + '?' +\n                        ')?)?'\n\nvar XRANGE = R++\nsrc[XRANGE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAIN] + '$'\nvar XRANGELOOSE = R++\nsrc[XRANGELOOSE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAINLOOSE] + '$'\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\nvar COERCE = R++\nsrc[COERCE] = '(?:^|[^\\\\d])' +\n              '(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '})' +\n              '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\n              '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\n              '(?:$|[^\\\\d])'\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\nvar LONETILDE = R++\nsrc[LONETILDE] = '(?:~>?)'\n\nvar TILDETRIM = R++\nsrc[TILDETRIM] = '(\\\\s*)' + src[LONETILDE] + '\\\\s+'\nre[TILDETRIM] = new RegExp(src[TILDETRIM], 'g')\nsafeRe[TILDETRIM] = new RegExp(makeSafeRe(src[TILDETRIM]), 'g')\nvar tildeTrimReplace = '$1~'\n\nvar TILDE = R++\nsrc[TILDE] = '^' + src[LONETILDE] + src[XRANGEPLAIN] + '$'\nvar TILDELOOSE = R++\nsrc[TILDELOOSE] = '^' + src[LONETILDE] + src[XRANGEPLAINLOOSE] + '$'\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\nvar LONECARET = R++\nsrc[LONECARET] = '(?:\\\\^)'\n\nvar CARETTRIM = R++\nsrc[CARETTRIM] = '(\\\\s*)' + src[LONECARET] + '\\\\s+'\nre[CARETTRIM] = new RegExp(src[CARETTRIM], 'g')\nsafeRe[CARETTRIM] = new RegExp(makeSafeRe(src[CARETTRIM]), 'g')\nvar caretTrimReplace = '$1^'\n\nvar CARET = R++\nsrc[CARET] = '^' + src[LONECARET] + src[XRANGEPLAIN] + '$'\nvar CARETLOOSE = R++\nsrc[CARETLOOSE] = '^' + src[LONECARET] + src[XRANGEPLAINLOOSE] + '$'\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\nvar COMPARATORLOOSE = R++\nsrc[COMPARATORLOOSE] = '^' + src[GTLT] + '\\\\s*(' + LOOSEPLAIN + ')$|^$'\nvar COMPARATOR = R++\nsrc[COMPARATOR] = '^' + src[GTLT] + '\\\\s*(' + FULLPLAIN + ')$|^$'\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\nvar COMPARATORTRIM = R++\nsrc[COMPARATORTRIM] = '(\\\\s*)' + src[GTLT] +\n                      '\\\\s*(' + LOOSEPLAIN + '|' + src[XRANGEPLAIN] + ')'\n\n// this one has to use the /g flag\nre[COMPARATORTRIM] = new RegExp(src[COMPARATORTRIM], 'g')\nsafeRe[COMPARATORTRIM] = new RegExp(makeSafeRe(src[COMPARATORTRIM]), 'g')\nvar comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\nvar HYPHENRANGE = R++\nsrc[HYPHENRANGE] = '^\\\\s*(' + src[XRANGEPLAIN] + ')' +\n                   '\\\\s+-\\\\s+' +\n                   '(' + src[XRANGEPLAIN] + ')' +\n                   '\\\\s*$'\n\nvar HYPHENRANGELOOSE = R++\nsrc[HYPHENRANGELOOSE] = '^\\\\s*(' + src[XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s+-\\\\s+' +\n                        '(' + src[XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s*$'\n\n// Star ranges basically just allow anything at all.\nvar STAR = R++\nsrc[STAR] = '(<|>)?=?\\\\s*\\\\*'\n\n// Compile to actual regexp objects.\n// All are flag-free, unless they were created above with a flag.\nfor (var i = 0; i < R; i++) {\n  debug(i, src[i])\n  if (!re[i]) {\n    re[i] = new RegExp(src[i])\n\n    // Replace all greedy whitespace to prevent regex dos issues. These regex are\n    // used internally via the safeRe object since all inputs in this library get\n    // normalized first to trim and collapse all extra whitespace. The original\n    // regexes are exported for userland consumption and lower level usage. A\n    // future breaking change could export the safer regex only with a note that\n    // all input should have extra whitespace removed.\n    safeRe[i] = new RegExp(makeSafeRe(src[i]))\n  }\n}\n\nexports.parse = parse\nfunction parse (version, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  if (version.length > MAX_LENGTH) {\n    return null\n  }\n\n  var r = options.loose ? safeRe[LOOSE] : safeRe[FULL]\n  if (!r.test(version)) {\n    return null\n  }\n\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    return null\n  }\n}\n\nexports.valid = valid\nfunction valid (version, options) {\n  var v = parse(version, options)\n  return v ? v.version : null\n}\n\nexports.clean = clean\nfunction clean (version, options) {\n  var s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\n\nexports.SemVer = SemVer\n\nfunction SemVer (version, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n  if (version instanceof SemVer) {\n    if (version.loose === options.loose) {\n      return version\n    } else {\n      version = version.version\n    }\n  } else if (typeof version !== 'string') {\n    throw new TypeError('Invalid Version: ' + version)\n  }\n\n  if (version.length > MAX_LENGTH) {\n    throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters')\n  }\n\n  if (!(this instanceof SemVer)) {\n    return new SemVer(version, options)\n  }\n\n  debug('SemVer', version, options)\n  this.options = options\n  this.loose = !!options.loose\n\n  var m = version.trim().match(options.loose ? safeRe[LOOSE] : safeRe[FULL])\n\n  if (!m) {\n    throw new TypeError('Invalid Version: ' + version)\n  }\n\n  this.raw = version\n\n  // these are actually numbers\n  this.major = +m[1]\n  this.minor = +m[2]\n  this.patch = +m[3]\n\n  if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n    throw new TypeError('Invalid major version')\n  }\n\n  if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n    throw new TypeError('Invalid minor version')\n  }\n\n  if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n    throw new TypeError('Invalid patch version')\n  }\n\n  // numberify any prerelease numeric ids\n  if (!m[4]) {\n    this.prerelease = []\n  } else {\n    this.prerelease = m[4].split('.').map(function (id) {\n      if (/^[0-9]+$/.test(id)) {\n        var num = +id\n        if (num >= 0 && num < MAX_SAFE_INTEGER) {\n          return num\n        }\n      }\n      return id\n    })\n  }\n\n  this.build = m[5] ? m[5].split('.') : []\n  this.format()\n}\n\nSemVer.prototype.format = function () {\n  this.version = this.major + '.' + this.minor + '.' + this.patch\n  if (this.prerelease.length) {\n    this.version += '-' + this.prerelease.join('.')\n  }\n  return this.version\n}\n\nSemVer.prototype.toString = function () {\n  return this.version\n}\n\nSemVer.prototype.compare = function (other) {\n  debug('SemVer.compare', this.version, this.options, other)\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  return this.compareMain(other) || this.comparePre(other)\n}\n\nSemVer.prototype.compareMain = function (other) {\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  return compareIdentifiers(this.major, other.major) ||\n         compareIdentifiers(this.minor, other.minor) ||\n         compareIdentifiers(this.patch, other.patch)\n}\n\nSemVer.prototype.comparePre = function (other) {\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  // NOT having a prerelease is > having one\n  if (this.prerelease.length && !other.prerelease.length) {\n    return -1\n  } else if (!this.prerelease.length && other.prerelease.length) {\n    return 1\n  } else if (!this.prerelease.length && !other.prerelease.length) {\n    return 0\n  }\n\n  var i = 0\n  do {\n    var a = this.prerelease[i]\n    var b = other.prerelease[i]\n    debug('prerelease compare', i, a, b)\n    if (a === undefined && b === undefined) {\n      return 0\n    } else if (b === undefined) {\n      return 1\n    } else if (a === undefined) {\n      return -1\n    } else if (a === b) {\n      continue\n    } else {\n      return compareIdentifiers(a, b)\n    }\n  } while (++i)\n}\n\n// preminor will bump the version up to the next minor release, and immediately\n// down to pre-release. premajor and prepatch work the same way.\nSemVer.prototype.inc = function (release, identifier) {\n  switch (release) {\n    case 'premajor':\n      this.prerelease.length = 0\n      this.patch = 0\n      this.minor = 0\n      this.major++\n      this.inc('pre', identifier)\n      break\n    case 'preminor':\n      this.prerelease.length = 0\n      this.patch = 0\n      this.minor++\n      this.inc('pre', identifier)\n      break\n    case 'prepatch':\n      // If this is already a prerelease, it will bump to the next version\n      // drop any prereleases that might already exist, since they are not\n      // relevant at this point.\n      this.prerelease.length = 0\n      this.inc('patch', identifier)\n      this.inc('pre', identifier)\n      break\n    // If the input is a non-prerelease version, this acts the same as\n    // prepatch.\n    case 'prerelease':\n      if (this.prerelease.length === 0) {\n        this.inc('patch', identifier)\n      }\n      this.inc('pre', identifier)\n      break\n\n    case 'major':\n      // If this is a pre-major version, bump up to the same major version.\n      // Otherwise increment major.\n      // 1.0.0-5 bumps to 1.0.0\n      // 1.1.0 bumps to 2.0.0\n      if (this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0) {\n        this.major++\n      }\n      this.minor = 0\n      this.patch = 0\n      this.prerelease = []\n      break\n    case 'minor':\n      // If this is a pre-minor version, bump up to the same minor version.\n      // Otherwise increment minor.\n      // 1.2.0-5 bumps to 1.2.0\n      // 1.2.1 bumps to 1.3.0\n      if (this.patch !== 0 || this.prerelease.length === 0) {\n        this.minor++\n      }\n      this.patch = 0\n      this.prerelease = []\n      break\n    case 'patch':\n      // If this is not a pre-release version, it will increment the patch.\n      // If it is a pre-release it will bump up to the same patch version.\n      // 1.2.0-5 patches to 1.2.0\n      // 1.2.0 patches to 1.2.1\n      if (this.prerelease.length === 0) {\n        this.patch++\n      }\n      this.prerelease = []\n      break\n    // This probably shouldn't be used publicly.\n    // 1.0.0 \"pre\" would become 1.0.0-0 which is the wrong direction.\n    case 'pre':\n      if (this.prerelease.length === 0) {\n        this.prerelease = [0]\n      } else {\n        var i = this.prerelease.length\n        while (--i >= 0) {\n          if (typeof this.prerelease[i] === 'number') {\n            this.prerelease[i]++\n            i = -2\n          }\n        }\n        if (i === -1) {\n          // didn't increment anything\n          this.prerelease.push(0)\n        }\n      }\n      if (identifier) {\n        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n        if (this.prerelease[0] === identifier) {\n          if (isNaN(this.prerelease[1])) {\n            this.prerelease = [identifier, 0]\n          }\n        } else {\n          this.prerelease = [identifier, 0]\n        }\n      }\n      break\n\n    default:\n      throw new Error('invalid increment argument: ' + release)\n  }\n  this.format()\n  this.raw = this.version\n  return this\n}\n\nexports.inc = inc\nfunction inc (version, release, loose, identifier) {\n  if (typeof (loose) === 'string') {\n    identifier = loose\n    loose = undefined\n  }\n\n  try {\n    return new SemVer(version, loose).inc(release, identifier).version\n  } catch (er) {\n    return null\n  }\n}\n\nexports.diff = diff\nfunction diff (version1, version2) {\n  if (eq(version1, version2)) {\n    return null\n  } else {\n    var v1 = parse(version1)\n    var v2 = parse(version2)\n    var prefix = ''\n    if (v1.prerelease.length || v2.prerelease.length) {\n      prefix = 'pre'\n      var defaultResult = 'prerelease'\n    }\n    for (var key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return prefix + key\n        }\n      }\n    }\n    return defaultResult // may be undefined\n  }\n}\n\nexports.compareIdentifiers = compareIdentifiers\n\nvar numeric = /^[0-9]+$/\nfunction compareIdentifiers (a, b) {\n  var anum = numeric.test(a)\n  var bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nexports.rcompareIdentifiers = rcompareIdentifiers\nfunction rcompareIdentifiers (a, b) {\n  return compareIdentifiers(b, a)\n}\n\nexports.major = major\nfunction major (a, loose) {\n  return new SemVer(a, loose).major\n}\n\nexports.minor = minor\nfunction minor (a, loose) {\n  return new SemVer(a, loose).minor\n}\n\nexports.patch = patch\nfunction patch (a, loose) {\n  return new SemVer(a, loose).patch\n}\n\nexports.compare = compare\nfunction compare (a, b, loose) {\n  return new SemVer(a, loose).compare(new SemVer(b, loose))\n}\n\nexports.compareLoose = compareLoose\nfunction compareLoose (a, b) {\n  return compare(a, b, true)\n}\n\nexports.rcompare = rcompare\nfunction rcompare (a, b, loose) {\n  return compare(b, a, loose)\n}\n\nexports.sort = sort\nfunction sort (list, loose) {\n  return list.sort(function (a, b) {\n    return exports.compare(a, b, loose)\n  })\n}\n\nexports.rsort = rsort\nfunction rsort (list, loose) {\n  return list.sort(function (a, b) {\n    return exports.rcompare(a, b, loose)\n  })\n}\n\nexports.gt = gt\nfunction gt (a, b, loose) {\n  return compare(a, b, loose) > 0\n}\n\nexports.lt = lt\nfunction lt (a, b, loose) {\n  return compare(a, b, loose) < 0\n}\n\nexports.eq = eq\nfunction eq (a, b, loose) {\n  return compare(a, b, loose) === 0\n}\n\nexports.neq = neq\nfunction neq (a, b, loose) {\n  return compare(a, b, loose) !== 0\n}\n\nexports.gte = gte\nfunction gte (a, b, loose) {\n  return compare(a, b, loose) >= 0\n}\n\nexports.lte = lte\nfunction lte (a, b, loose) {\n  return compare(a, b, loose) <= 0\n}\n\nexports.cmp = cmp\nfunction cmp (a, op, b, loose) {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError('Invalid operator: ' + op)\n  }\n}\n\nexports.Comparator = Comparator\nfunction Comparator (comp, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  if (comp instanceof Comparator) {\n    if (comp.loose === !!options.loose) {\n      return comp\n    } else {\n      comp = comp.value\n    }\n  }\n\n  if (!(this instanceof Comparator)) {\n    return new Comparator(comp, options)\n  }\n\n  comp = comp.trim().split(/\\s+/).join(' ')\n  debug('comparator', comp, options)\n  this.options = options\n  this.loose = !!options.loose\n  this.parse(comp)\n\n  if (this.semver === ANY) {\n    this.value = ''\n  } else {\n    this.value = this.operator + this.semver.version\n  }\n\n  debug('comp', this)\n}\n\nvar ANY = {}\nComparator.prototype.parse = function (comp) {\n  var r = this.options.loose ? safeRe[COMPARATORLOOSE] : safeRe[COMPARATOR]\n  var m = comp.match(r)\n\n  if (!m) {\n    throw new TypeError('Invalid comparator: ' + comp)\n  }\n\n  this.operator = m[1]\n  if (this.operator === '=') {\n    this.operator = ''\n  }\n\n  // if it literally is just '>' or '' then allow anything.\n  if (!m[2]) {\n    this.semver = ANY\n  } else {\n    this.semver = new SemVer(m[2], this.options.loose)\n  }\n}\n\nComparator.prototype.toString = function () {\n  return this.value\n}\n\nComparator.prototype.test = function (version) {\n  debug('Comparator.test', version, this.options.loose)\n\n  if (this.semver === ANY) {\n    return true\n  }\n\n  if (typeof version === 'string') {\n    version = new SemVer(version, this.options)\n  }\n\n  return cmp(version, this.operator, this.semver, this.options)\n}\n\nComparator.prototype.intersects = function (comp, options) {\n  if (!(comp instanceof Comparator)) {\n    throw new TypeError('a Comparator is required')\n  }\n\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  var rangeTmp\n\n  if (this.operator === '') {\n    rangeTmp = new Range(comp.value, options)\n    return satisfies(this.value, rangeTmp, options)\n  } else if (comp.operator === '') {\n    rangeTmp = new Range(this.value, options)\n    return satisfies(comp.semver, rangeTmp, options)\n  }\n\n  var sameDirectionIncreasing =\n    (this.operator === '>=' || this.operator === '>') &&\n    (comp.operator === '>=' || comp.operator === '>')\n  var sameDirectionDecreasing =\n    (this.operator === '<=' || this.operator === '<') &&\n    (comp.operator === '<=' || comp.operator === '<')\n  var sameSemVer = this.semver.version === comp.semver.version\n  var differentDirectionsInclusive =\n    (this.operator === '>=' || this.operator === '<=') &&\n    (comp.operator === '>=' || comp.operator === '<=')\n  var oppositeDirectionsLessThan =\n    cmp(this.semver, '<', comp.semver, options) &&\n    ((this.operator === '>=' || this.operator === '>') &&\n    (comp.operator === '<=' || comp.operator === '<'))\n  var oppositeDirectionsGreaterThan =\n    cmp(this.semver, '>', comp.semver, options) &&\n    ((this.operator === '<=' || this.operator === '<') &&\n    (comp.operator === '>=' || comp.operator === '>'))\n\n  return sameDirectionIncreasing || sameDirectionDecreasing ||\n    (sameSemVer && differentDirectionsInclusive) ||\n    oppositeDirectionsLessThan || oppositeDirectionsGreaterThan\n}\n\nexports.Range = Range\nfunction Range (range, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  if (range instanceof Range) {\n    if (range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease) {\n      return range\n    } else {\n      return new Range(range.raw, options)\n    }\n  }\n\n  if (range instanceof Comparator) {\n    return new Range(range.value, options)\n  }\n\n  if (!(this instanceof Range)) {\n    return new Range(range, options)\n  }\n\n  this.options = options\n  this.loose = !!options.loose\n  this.includePrerelease = !!options.includePrerelease\n\n  // First reduce all whitespace as much as possible so we do not have to rely\n  // on potentially slow regexes like \\s*. This is then stored and used for\n  // future error messages as well.\n  this.raw = range\n    .trim()\n    .split(/\\s+/)\n    .join(' ')\n\n  // First, split based on boolean or ||\n  this.set = this.raw.split('||').map(function (range) {\n    return this.parseRange(range.trim())\n  }, this).filter(function (c) {\n    // throw out any that are not relevant for whatever reason\n    return c.length\n  })\n\n  if (!this.set.length) {\n    throw new TypeError('Invalid SemVer Range: ' + this.raw)\n  }\n\n  this.format()\n}\n\nRange.prototype.format = function () {\n  this.range = this.set.map(function (comps) {\n    return comps.join(' ').trim()\n  }).join('||').trim()\n  return this.range\n}\n\nRange.prototype.toString = function () {\n  return this.range\n}\n\nRange.prototype.parseRange = function (range) {\n  var loose = this.options.loose\n  // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n  var hr = loose ? safeRe[HYPHENRANGELOOSE] : safeRe[HYPHENRANGE]\n  range = range.replace(hr, hyphenReplace)\n  debug('hyphen replace', range)\n  // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n  range = range.replace(safeRe[COMPARATORTRIM], comparatorTrimReplace)\n  debug('comparator trim', range, safeRe[COMPARATORTRIM])\n\n  // `~ 1.2.3` => `~1.2.3`\n  range = range.replace(safeRe[TILDETRIM], tildeTrimReplace)\n\n  // `^ 1.2.3` => `^1.2.3`\n  range = range.replace(safeRe[CARETTRIM], caretTrimReplace)\n\n  // At this point, the range is completely trimmed and\n  // ready to be split into comparators.\n  var compRe = loose ? safeRe[COMPARATORLOOSE] : safeRe[COMPARATOR]\n  var set = range.split(' ').map(function (comp) {\n    return parseComparator(comp, this.options)\n  }, this).join(' ').split(/\\s+/)\n  if (this.options.loose) {\n    // in loose mode, throw out any that are not valid comparators\n    set = set.filter(function (comp) {\n      return !!comp.match(compRe)\n    })\n  }\n  set = set.map(function (comp) {\n    return new Comparator(comp, this.options)\n  }, this)\n\n  return set\n}\n\nRange.prototype.intersects = function (range, options) {\n  if (!(range instanceof Range)) {\n    throw new TypeError('a Range is required')\n  }\n\n  return this.set.some(function (thisComparators) {\n    return thisComparators.every(function (thisComparator) {\n      return range.set.some(function (rangeComparators) {\n        return rangeComparators.every(function (rangeComparator) {\n          return thisComparator.intersects(rangeComparator, options)\n        })\n      })\n    })\n  })\n}\n\n// Mostly just for testing and legacy API reasons\nexports.toComparators = toComparators\nfunction toComparators (range, options) {\n  return new Range(range, options).set.map(function (comp) {\n    return comp.map(function (c) {\n      return c.value\n    }).join(' ').trim().split(' ')\n  })\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nfunction parseComparator (comp, options) {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nfunction isX (id) {\n  return !id || id.toLowerCase() === 'x' || id === '*'\n}\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0\nfunction replaceTildes (comp, options) {\n  return comp.trim().split(/\\s+/).map(function (comp) {\n    return replaceTilde(comp, options)\n  }).join(' ')\n}\n\nfunction replaceTilde (comp, options) {\n  var r = options.loose ? safeRe[TILDELOOSE] : safeRe[TILDE]\n  return comp.replace(r, function (_, M, m, p, pr) {\n    debug('tilde', comp, _, M, m, p, pr)\n    var ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n            ' <' + M + '.' + (+m + 1) + '.0'\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0\n      ret = '>=' + M + '.' + m + '.' + p +\n            ' <' + M + '.' + (+m + 1) + '.0'\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0\n// ^1.2.3 --> >=1.2.3 <2.0.0\n// ^1.2.0 --> >=1.2.0 <2.0.0\nfunction replaceCarets (comp, options) {\n  return comp.trim().split(/\\s+/).map(function (comp) {\n    return replaceCaret(comp, options)\n  }).join(' ')\n}\n\nfunction replaceCaret (comp, options) {\n  debug('caret', comp, options)\n  var r = options.loose ? safeRe[CARETLOOSE] : safeRe[CARET]\n  return comp.replace(r, function (_, M, m, p, pr) {\n    debug('caret', comp, _, M, m, p, pr)\n    var ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'\n      } else {\n        ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0'\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n                ' <' + M + '.' + m + '.' + (+p + 1)\n        } else {\n          ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n                ' <' + M + '.' + (+m + 1) + '.0'\n        }\n      } else {\n        ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n              ' <' + (+M + 1) + '.0.0'\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + m + '.' + (+p + 1)\n        } else {\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + (+m + 1) + '.0'\n        }\n      } else {\n        ret = '>=' + M + '.' + m + '.' + p +\n              ' <' + (+M + 1) + '.0.0'\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nfunction replaceXRanges (comp, options) {\n  debug('replaceXRanges', comp, options)\n  return comp.split(/\\s+/).map(function (comp) {\n    return replaceXRange(comp, options)\n  }).join(' ')\n}\n\nfunction replaceXRange (comp, options) {\n  comp = comp.trim()\n  var r = options.loose ? safeRe[XRANGELOOSE] : safeRe[XRANGE]\n  return comp.replace(r, function (ret, gtlt, M, m, p, pr) {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    var xM = isX(M)\n    var xm = xM || isX(m)\n    var xp = xm || isX(p)\n    var anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        // >1.2.3 => >= 1.2.4\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      ret = gtlt + M + '.' + m + '.' + p\n    } else if (xm) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'\n    } else if (xp) {\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nfunction replaceStars (comp, options) {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(safeRe[STAR], '')\n}\n\n// This function is passed to string.replace(safeRe[HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0\nfunction hyphenReplace ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr, tb) {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = '>=' + fM + '.0.0'\n  } else if (isX(fp)) {\n    from = '>=' + fM + '.' + fm + '.0'\n  } else {\n    from = '>=' + from\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = '<' + (+tM + 1) + '.0.0'\n  } else if (isX(tp)) {\n    to = '<' + tM + '.' + (+tm + 1) + '.0'\n  } else if (tpr) {\n    to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr\n  } else {\n    to = '<=' + to\n  }\n\n  return (from + ' ' + to).trim()\n}\n\n// if ANY of the sets match ALL of its comparators, then pass\nRange.prototype.test = function (version) {\n  if (!version) {\n    return false\n  }\n\n  if (typeof version === 'string') {\n    version = new SemVer(version, this.options)\n  }\n\n  for (var i = 0; i < this.set.length; i++) {\n    if (testSet(this.set[i], version, this.options)) {\n      return true\n    }\n  }\n  return false\n}\n\nfunction testSet (set, version, options) {\n  for (var i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        var allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n\nexports.satisfies = satisfies\nfunction satisfies (version, range, options) {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\n\nexports.maxSatisfying = maxSatisfying\nfunction maxSatisfying (versions, range, options) {\n  var max = null\n  var maxSV = null\n  try {\n    var rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\n\nexports.minSatisfying = minSatisfying\nfunction minSatisfying (versions, range, options) {\n  var min = null\n  var minSV = null\n  try {\n    var rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\n\nexports.minVersion = minVersion\nfunction minVersion (range, loose) {\n  range = new Range(range, loose)\n\n  var minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i]\n\n    comparators.forEach(function (comparator) {\n      // Clone to avoid manipulating the comparator's semver object.\n      var compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!minver || gt(minver, compver)) {\n            minver = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error('Unexpected operation: ' + comparator.operator)\n      }\n    })\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\n\nexports.validRange = validRange\nfunction validRange (range, options) {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\n\n// Determine if version is less than all the versions possible in the range\nexports.ltr = ltr\nfunction ltr (version, range, options) {\n  return outside(version, range, '<', options)\n}\n\n// Determine if version is greater than all the versions possible in the range.\nexports.gtr = gtr\nfunction gtr (version, range, options) {\n  return outside(version, range, '>', options)\n}\n\nexports.outside = outside\nfunction outside (version, range, hilo, options) {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  var gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisifes the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i]\n\n    var high = null\n    var low = null\n\n    comparators.forEach(function (comparator) {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nexports.prerelease = prerelease\nfunction prerelease (version, options) {\n  var parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\n\nexports.intersects = intersects\nfunction intersects (r1, r2, options) {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2)\n}\n\nexports.coerce = coerce\nfunction coerce (version) {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  var match = version.match(safeRe[COERCE])\n\n  if (match == null) {\n    return null\n  }\n\n  return parse(match[1] +\n    '.' + (match[2] || '0') +\n    '.' + (match[3] || '0'))\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}